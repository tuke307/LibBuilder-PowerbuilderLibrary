<!--
project=LibBuilder.WPF.Core, file=ProcessSettingsView.xaml, creation=2020:8:24
Copyright (c) 2020 Timeline Financials GmbH & Co. KG. All rights reserved.
-->
<views:MvxWpfView  x:Class="LibBuilder.WPF.Core.Views.ProcessSettingsView"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:local="clr-namespace:LibBuilder.WPF.Core"
                   xmlns:behaviours="clr-namespace:LibBuilder.WPF.Core.Business"
                   xmlns:viewModels="clr-namespace:LibBuilder.WPF.Core.ViewModels"
                   xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                   xmlns:region="clr-namespace:Mvx.Wpf.ItemsPresenter;assembly=Mvx.Wpf.ItemsPresenter"
                   x:TypeArguments="viewModels:ProcessSettingsViewModel"
                   region:MvxContainer.Header="Übersicht"
                   mc:Ignorable="d"
                   MinHeight="650"
                   MinWidth="900"
                   d:DesignHeight="650"
                   d:DesignWidth="900">
    <views:MvxWpfView.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--CONVERTER-->
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <behaviours:NegateBooleanConverter x:Key="Inverter" />

            <!--2 CONVERTER kombiniert-->
            <behaviours:CombiningConverter x:Key="negatedBoolToVisibilityConverter"
                                           Converter1="{StaticResource Inverter}"
                                           Converter2="{StaticResource BoolToVis}">
            </behaviours:CombiningConverter>
        </ResourceDictionary>
    </views:MvxWpfView.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="0"
                      Margin="10"
                      Header="Workspace">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <!--neues Workspace-->
                    <Button Grid.Column="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="10"
                            Command="{Binding OpenWorkspaceCommand}"
                            Content="{materialDesign:PackIcon Kind=CustomerService}"
                            ToolTip="neuen Kunden auswählen">
                    </Button>

                    <!--Workspace-->
                    <ComboBox Grid.Column="1"
                              Visibility="{Binding ElementName=WorkspaceFilePath, Path=IsVisible , Converter={StaticResource negatedBoolToVisibilityConverter}}"
                              Margin="10"
                              materialDesign:HintAssist.Hint="Workspace"
                              materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                              IsEditable="False"
                              ToolTip="Wähle ein Workspace aus"
                              ItemsSource="{Binding Mode=TwoWay, Path=Workspaces}"
                              SelectedItem="{Binding Mode=TwoWay, Path=Workspace}"
                              DisplayMemberPath="File"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding WorkspaceSelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>

                    <!--Workspace-->
                    <ComboBox Grid.Column="1"
                              x:Name="WorkspaceFilePath"
                              Visibility="{Binding Source={x:Static local:ApplicationSettings.Default}, Path=WorkspacePath, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Margin="10"
                              materialDesign:HintAssist.Hint="Workspace"
                              materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                              IsEditable="False"
                              ToolTip="Wähle ein Workspace aus"
                              ItemsSource="{Binding Mode=TwoWay, Path=Workspaces}"
                              SelectedItem="{Binding Mode=TwoWay, Path=Workspace}"
                              DisplayMemberPath="FilePath"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding WorkspaceSelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>

                    <!--Version-->
                    <ComboBox Grid.Column="2"
                              Margin="10"
                              materialDesign:HintAssist.Hint="Version"
                              materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                              IsEditable="False"
                              ItemsSource="{Binding Mode=OneTime, Path=PBVersionsDllExist}"
                              SelectedItem="{Binding Mode=TwoWay, Path=PBVersionDllExist}"
                              Width="100"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SaveWorkspaceCommand}" />
                                <i:InvokeCommandAction Command="{Binding WorkspaceSelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Margin="0 0 0 0"
                                               Grid.Column="0"
                                               Text="{Binding PBVersion}" />

                                    <Button HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding Path=DllExist, Converter={StaticResource BooleanToVisibilityConverter}}"
                                            Style="{StaticResource MaterialDesignFloatingActionButton}"
                                            Margin="5 0 0 0"
                                            Grid.Column="1"
                                            Height="15"
                                            Width="15">
                                        <materialDesign:PackIcon Kind="Check"
                                                                 Height="13"
                                                                 Width="13" />
                                    </Button>

                                    <Button HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Background="Red"
                                            BorderBrush="Red"
                                            Visibility="{Binding Path=DllExist, Converter={StaticResource negatedBoolToVisibilityConverter}}"
                                            Style="{StaticResource MaterialDesignFloatingActionButton}"
                                            Margin="5 0 0 0"
                                            Grid.Column="1"
                                            Height="15"
                                            Width="15">
                                        <materialDesign:PackIcon Kind="Cancel"
                                                                 Height="13"
                                                                 Width="13" />
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Column="1"
                      Margin="10"
                      Header="Target">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <!--Target-->
                    <ComboBox Grid.Column="0"
                              x:Name="TargetFilePath"
                              Visibility="{Binding Source={x:Static local:ApplicationSettings.Default}, Path=TargetPath, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                              materialDesign:HintAssist.Hint="Target"
                              materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                              IsEditable="False"
                              ToolTip="Wähle ein Target aus"
                              ItemsSource="{Binding Mode=OneWay, Path=Targets}"
                              SelectedItem="{Binding Mode=TwoWay, Path=Target}"
                              DisplayMemberPath="FilePath"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TargetSelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>

                    <!--Target-->
                    <ComboBox Grid.Column="0"
                              Visibility="{Binding ElementName=TargetFilePath, Path=IsVisible , Converter={StaticResource negatedBoolToVisibilityConverter}}"
                              materialDesign:HintAssist.Hint="Target"
                              materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                              IsEditable="False"
                              ToolTip="Wähle ein Target aus"
                              ItemsSource="{Binding Mode=OneWay, Path=Targets}"
                              SelectedItem="{Binding Mode=TwoWay, Path=Target}"
                              DisplayMemberPath="File"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TargetSelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>

                    <ComboBox Grid.Column="1"
                              Margin="10"
                              materialDesign:HintAssist.Hint="Rebuild-Typ"
                              materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                              IsEditable="False"
                              Width="100"
                              Visibility="{Binding Source={x:Static local:ApplicationSettings.Default}, Path=ApplicationRebuildOptions, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                              ItemsSource="{Binding Mode=OneTime, Path=ApplicationRebuild}"
                              SelectedItem="{Binding Mode=TwoWay, Path=TargetApplicationRebuild}"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                              VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SaveTargetCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
            </GroupBox>

            <!--Ladebalken-->
            <materialDesign:ColorZone Grid.Column="2"
                                      Mode="Light"
                                      Opacity="0.7"
                                      Visibility="{Binding Mode=OneWay, Path=ContentLoadingAnimation, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Top">
                <materialDesign:Card UniformCornerRadius="14"
                                     Margin="10"
                                     Width="30"
                                     Height="30"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                                 Value="50"
                                 IsIndeterminate="True"
                                 Height="20"
                                 Width="20" />
                </materialDesign:Card>
            </materialDesign:ColorZone>

            <!--Start-->
            <Button Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="40 20 40 20"
                    Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                    Command="{Binding RunProcedurCommand}"
                    Content="{materialDesign:PackIcon Kind=Play}"
                    ToolTip="Start der Prozedur" />
        </Grid>

        <GroupBox Grid.Row="1"
                  Margin="10"
                  Header="Librarys">
            <Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0.1*" />
                        <!--DA IST NICHTS DRIN, platzhalter für expander overlay-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <DataGrid Grid.Column="0"
                              Grid.Row="0"
                              x:Name="LibDataGrid"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              SelectedItem="{Binding Mode=TwoWay, Path=Library}"
                              ItemsSource="{Binding Mode=OneWay, Path=Librarys}">
                        <DataGrid.Columns>

                            <DataGridTextColumn Header="File"
                                                Binding="{Binding Mode=OneWay, Path=File}"
                                                IsReadOnly="True" />

                            <DataGridTextColumn Header="Directory"
                                                Binding="{Binding Mode=OneWay, Path=Directory}"
                                                IsReadOnly="True" />

                            <!--<DataGridTemplateColumn Header="Regenerate">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Mode=TwoWay, Path=Regenerate}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>-->

                            <DataGridTemplateColumn Header="Build">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Mode=TwoWay, Path=Build, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <!--<i:InvokeCommandAction Command="{Binding SaveLibraryCommand}" />-->
                                <i:InvokeCommandAction Command="{Binding LibrarySelectedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0"
                                  Margin="5"
                                  x:Name="CompletePath"
                                  IsChecked="{Binding Source={x:Static local:ApplicationSettings.Default}, Path=LibraryPath, Mode=TwoWay}"
                                  Checked="CompletePath_Checked"
                                  Unchecked="CompletePath_Unchecked"
                                  Style="{StaticResource MaterialDesignCheckBox}">
                            Pfad anzeigen
                        </CheckBox>

                        <!--alle auswahählen-->
                        <Button Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Margin="10"
                                Command="{Binding SelectAllLibrarysCommand}"
                                Content="{materialDesign:PackIcon Kind=Selection}"
                                ToolTip="Refresh">
                        </Button>

                        <!--alle löschen-->
                        <Button Grid.Column="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="10"
                                Command="{Binding DeselectAllLibrarysCommand}"
                                Content="{materialDesign:PackIcon Kind=SelectionOff}">
                        </Button>
                    </Grid>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.25*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <materialDesign:Card Grid.Column="1"
                                         Margin="10"
                                         Background="{DynamicResource MaterialDesignBackground}">

                        <Expander ExpandDirection="Right"
                                  MaxWidth="500">
                            <Expander.Header>
                                <TextBlock Text="Objects">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="90" />
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Expander.Header>

                            <Grid Margin="10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>

                                <DataGrid Grid.Row="0"
                                          AutoGenerateColumns="False"
                                          CanUserAddRows="False"
                                          SelectedItem="{Binding Mode=TwoWay, Path=Object}"
                                          ItemsSource="{Binding Mode=OneWay, Path=Objects}">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name"
                                                            IsReadOnly="True"
                                                            Binding="{Binding Mode=OneWay, Path=Name}" />

                                        <DataGridTextColumn Header="Type"
                                                            IsReadOnly="True"
                                                            Binding="{Binding Mode=OneWay, Path=ObjectType}" />

                                        <DataGridTemplateColumn Header="Regenerate">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox IsChecked="{Binding Mode=TwoWay, Path=Regenerate, UpdateSourceTrigger=PropertyChanged}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                    <!--<i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="SelectionChanged">
                                                        <i:InvokeCommandAction Command="{Binding SaveObjectCommand}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>-->
                                </DataGrid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!--alle auswahählen-->
                                    <Button Grid.Column="0"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Margin="10"
                                            Command="{Binding SelectAllEntrysCommand}"
                                            Content="{materialDesign:PackIcon Kind=Selection}"
                                            ToolTip="Refresh">
                                    </Button>

                                    <!--alle löschen-->
                                    <Button Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="10"
                                            Command="{Binding DeselectAllEntrysCommand}"
                                            Content="{materialDesign:PackIcon Kind=SelectionOff}">
                                    </Button>
                                </Grid>
                            </Grid>
                        </Expander>
                    </materialDesign:Card>
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</views:MvxWpfView>